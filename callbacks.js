//!–°–¢–†–Ü–õ–û–ß–ù–Ü –§–£–ù–ö–¶–Ü–á, –ü–†–ê–ö–¢–ò–ö–ê
const numbers = [1, 2, 3, 4, 5];

// const greaterThanTwo = numbers.filter(function (num) {
//   return num > 2;
// });

// console.log(greaterThanTwo);

const greaterThanTwo = numbers.filter((num) => num > 2);

console.log(greaterThanTwo);

/////////////////////////////////////////////////////////////////////
//* Example 1 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó
// –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:

//* createProduct(obj, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–ª–±–µ–∫.
//–§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É
//–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å id —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.

//* logProduct(product) - –∫–æ–ª–±–±–µ–∫ –ø—Ä–∏–π–º–∞—é—á–∏–π –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å

//* logTotalPrice(product) - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î
//–∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å

const apple = { name: "üçé", price: 30, quantity: 3 };
const lemon = { name: "üçã", price: 20, quantity: 5 };

//–ù—É —ñ —Ç—É—Ç –Ω–∞–π–≥–æ–ª–æ–≤–Ω—ñ—à–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑ –∫–æ–ª–±–µ–∫–æ–º
function createProduct(obj, callback) {
  ///—Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –ø—É—Å—Ç–∏–π –æ–±'—î–∫—Ç
  const newProduct = { ...obj, id: Date.now() }; //id: Date.now() - —Ç–∞–∫
  //–¥–æ–¥–∞—î–º–æ –Ω–æ–≤—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å
  callback(newProduct);
}

function logProduct(product) {
  console.table(product);
}

logProduct(apple);

function logTotalPrice({ price, quantity }) {
  ///–¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑—É—î–º–æ product, –∞ —Å–∞–º–µ –∑–∞–ø–∏—Å—É—î–º–æ
  //—Ç—ñ–ª—å–∫–∏ —Ç—ñ –∑–º—ñ–Ω–Ω—ñ, —è–∫—ñ –Ω–∞–º –±—É–¥—É—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—ñ
  //   return price * quantity;
  console.log(price * quantity);
}

logTotalPrice(lemon);

//–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ–≥–æ –≤—Å—å–æ–≥–æ, –≤–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é, –≤ —è–∫—É –ø–µ—Ä–µ–¥–∞–º–æ —ñ–Ω—à—É —Ñ—É–Ω–∫—Ü—ñ—é —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç

createProduct(apple, logProduct);
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//* Example 2 - –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó
// –î–æ–¥–∞–π—Ç–µ –æ–±'—î–∫—Ç account –º–µ—Ç–æ–¥–∏ withdraw(amount, onSuccess, onError)
//—Ç–∞ deposit(amount, onSuccess, onError), –¥–µ –ø–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ —Å—É–º–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó,
//–∞ –¥—Ä—É–≥–∏–π —Ç–∞ —Ç—Ä–µ—Ç—ñ–π - –∫–æ–ª–ª–±–µ–∫–∏.

// –ú–µ—Ç–æ–¥ withdraw –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT
//–∞–±–æ this.balance, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

// –ú–µ—Ç–æ–¥ deposit –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount
//–±—ñ–ª—å—à–µ TRANSACTION_LIMIT –∞–±–æ –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é, —ñ onSuccess –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

const TRANSACTION_LIMIT = 1000;

const account = {
  username: "Jacob",
  balance: 400,
  withdraw(amount, onSuccess, onError) {
    if (amount >= TRANSACTION_LIMIT) {
      onError(`–ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç! –ü–æ—Ç–æ—á–Ω–∏–π –ª—ñ–º—ñ—Ç: ${TRANSACTION_LIMIT}`);
    } else if (amount >= this.balance) {
      onError(`–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤! –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å: ${this.balance}`);
    } else {
      this.balance -= amount;
      onSuccess(`–ö–æ—à—Ç–∏ –∑–Ω—è—Ç–æ! –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å : ${this.balance}`);
    }
  },
  deposit(amount, onSuccess, onError) {},
};

account.withdraw(500, handleSuccess, handleError);

function handleSuccess(message) {
  console.log(`‚úÖ Success! ${message}`);
}

function handleError(message) {
  console.error(`‚ùå Error! ${message}`);
}
